"use strict";var AngularFire;angular.module("firebase",[]).value("Firebase",Firebase),angular.module("firebase").factory("$firebase",["$q","$parse","$timeout",function(a,b,c){return function(d){var e=new AngularFire(a,b,c,d);return e.construct()}}]),AngularFire=function(a,b,c,d){if(this._q=a,this._bound=!1,this._parse=b,this._timeout=c,"string"==typeof d)throw new Error("Please provide a Firebase reference instead of a URL, eg: new Firebase(url)");this._fRef=d},AngularFire.prototype={construct:function(){var a=this,b={};return b.$bind=function(b,c){return a._bind(b,c)},b.$add=function(b){a._fRef.ref().push(angular.fromJson(angular.toJson(b)))},b.$save=function(){a._fRef.ref().update(angular.fromJson(angular.toJson(a._object)))},b.$set=function(){a._fRef.ref().set(angular.fromJson(angular.toJson(a._object)))},b.$remove=function(){a._fRef.ref().remove()},b.$on=function(b,c){if("change"!=b)throw new Error("Invalid event type "+b+" specified");a._onChange=c},a._object=b,a._getInitialValue(),a._object},_getInitialValue:function(){var a=this;a._fRef.on("value",function(b){var c=b.val();switch(typeof c){case"string":case"number":case"boolean":a._updatePrimitive(c);break;case"object":a._getChildValues(),a._fRef.off("value");break;default:throw new Error("Unexpected type from remote data "+typeof c)}})},_getChildValues:function(){var a=this;a._fRef.on("child_added",function(b){a._updateModel(b.name(),b.val())}),a._fRef.on("child_changed",function(b){a._updateModel(b.name(),b.val())}),a._fRef.on("child_removed",function(b){a._updateModel(b.name(),null)})},_updateModel:function(a,b){var c=this;c._timeout(function(){if(null==b?delete c._object[a]:c._object[a]=b,c._onChange&&"function"==typeof c._onChange&&c._onChange(),c._bound){var d=c._object,e=c._parse(c._name)(c._scope);angular.equals(d,e)||c._parse(c._name).assign(c._scope,angular.copy(d))}})},_updatePrimitive:function(a){var b=this;b._timeout(function(){if(b._object.$value=a,b._onChange&&"function"==typeof b._onChange&&b._onChange(),b._bound){var c=b._parse(b._name)(b._scope);angular.equals(a,c)||b._parse(b._name).assign(b._scope,a)}})},_bind:function(a,b){var c=this,d=c._q.defer();c._name=b,c._bound=!0,c._scope=a;var e=c._parse(b)(a);void 0===e?c._parse(b).assign(a,{}):c._fRef.update(angular.fromJson(angular.toJson(e)));var f=a.$watch(b,function(){e=angular.fromJson(angular.toJson(c._parse(b)(a))),angular.equals(e,c._object)||(c._fRef.set?c._fRef.set(e):c._fRef.ref().update(e))},!0);return a.$on("$destroy",function(){f()}),c._fRef.once("value",function(){d.resolve(f)}),d.promise}};